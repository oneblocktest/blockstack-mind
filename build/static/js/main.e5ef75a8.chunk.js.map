{"version":3,"sources":["Signin.js","component/toolbar/toolbar-item-open.js","component/toolbar/toolbar-item-layout.js","component/toolbar/toolbar-item-theme.js","component/toolbar/toolbar-item-export.js","utils/index.js","component/toolbar/toolbar-item-search.js","component/toolbar/toolbar.js","component/mindmap.js","Profile.js","App.js","serviceWorker.js","index.js","images/default.jpg","images/theme1.jpg","images/theme2.jpg","images/theme3.jpg","images/theme4.jpg"],"names":["Signin","handleSignIn","this","props","className","id","onClick","bind","Component","ToolbarItemOpen","iconClassName","e","diagram","controller","getDiagramProps","browserOpenFile","then","txt","obj","JSON","parse","model","run","openNewModel","ToolbarItemLayout","layoutDirs","DiagramLayoutType","LEFT_AND_RIGHT","LEFT_TO_RIGHT","RIGHT_TO_LEFT","cx","enforceFocus","map","dir","key","icon","Icon","text","layoutDir","diagramProps","ToolbarItemTheme","themes","defaultThemeImg","theme1Img","theme2Img","theme3Img","theme4Img","theme","themeKey","src","alt","ToolbarItemExport","json","jsonStr","stringify","url","encodeURIComponent","title","topicKey","rootTopicKey","filename","link","document","createElement","href","download","click","downloadFile","ToolbarItemSearch","IconName","SEARCH","opType","OpType","SET_FOCUS_MODE","focusMode","FOCUS_MODE_SEARCH","Toolbar","onClickUndo","onClickRedo","canUndo","canRedo","React","PureComponent","plugins","debug","RichTextEditorPlugin","ThemeSelectorPlugin","TopicReferencePlugin","SearchPlugin","TopologyDiagramPlugin","JsonSerializerPlugin","Mindmap","diagramRef","ref","setState","onChange","callback","initModel","rootKey","createKey","Model","create","topics","blocks","type","data","generateSimpleModel","state","toolbarProps","renderToolbar","renderDiagram","Profile","person","name","handleSignOut","userSession","isSignInPending","avatarUrl","Person","loadUserData","profile","appConfig","AppConfig","UserSession","App","preventDefault","redirectToSignIn","signUserOut","window","location","origin","isUserSignedIn","handlePendingSignIn","userData","history","replaceState","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e5ef75a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Signin extends Component {\r\n\r\n  render() {\r\n    const { handleSignIn } = this.props;\r\n\r\n    return (\r\n      <div className=\"panel-landing\" id=\"section-1\">\r\n        <h1 className=\"landing-heading\">Hello,mychart!</h1>\r\n        <p className=\"lead\">\r\n          <button\r\n            className=\"btn btn-primary btn-lg\"\r\n            id=\"signin-button\"\r\n            onClick={ handleSignIn.bind(this) }\r\n          >\r\n            Sign In with Blockstack\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { iconClassName, browserOpenFile } from \"@blink-mind/renderer-react\";\r\n\r\nexport function ToolbarItemOpen(props) {\r\n  const onClickOpenFile = e => {\r\n    const { diagram } = props;\r\n    const diagramProps = diagram.getDiagramProps();\r\n    const { controller } = diagramProps;\r\n    browserOpenFile(\".json,.blinkmind,.bm\").then(txt => {\r\n      let obj = JSON.parse(txt);\r\n      let model = controller.run(\"deserializeModel\", { controller, obj });\r\n      diagram.openNewModel(model);\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      className={`bm-toolbar-item ${iconClassName(\"openfile\")}`}\r\n      onClick={onClickOpenFile}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DiagramLayoutType } from \"@blink-mind/core\";\r\nimport cx from \"classnames\";\r\nimport { Icon, iconClassName } from \"@blink-mind/renderer-react\";\r\nimport { Menu, MenuItem, Popover } from \"@blueprintjs/core\";\r\n\r\nexport function ToolbarItemLayout(props) {\r\n  const layoutDirs = [\r\n    [\r\n      DiagramLayoutType.LEFT_AND_RIGHT,\r\n      \"Left And Right\",\r\n      \"layout-left-and-right\"\r\n    ],\r\n    [DiagramLayoutType.LEFT_TO_RIGHT, \"Only Right\", \"layout-right\"],\r\n    [DiagramLayoutType.RIGHT_TO_LEFT, \"Only Left\", \"layout-left\"]\r\n  ];\r\n\r\n  const onClickSetLayout = layoutDir => e => {\r\n    const { diagram } = props;\r\n    const diagramProps = diagram.getDiagramProps();\r\n    const { controller } = diagramProps;\r\n    controller.run(\"setLayoutDir\", { ...diagramProps, layoutDir });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cx(\"bm-toolbar-item\", iconClassName(\"layout-left-and-right\"))}\r\n    >\r\n      <Popover enforceFocus={false}>\r\n        <div className=\"bm-toolbar-popover-target\" />\r\n        <Menu>\r\n          {layoutDirs.map(dir => (\r\n            <MenuItem\r\n              key={dir[1]}\r\n              icon={Icon(dir[2])}\r\n              text={dir[1]}\r\n              onClick={onClickSetLayout(dir[0])}\r\n            />\r\n          ))}\r\n        </Menu>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n","import defaultThemeImg from \"../../images/default.jpg\";\r\nimport theme1Img from \"../../images/theme1.jpg\";\r\nimport theme2Img from \"../../images/theme2.jpg\";\r\nimport theme3Img from \"../../images/theme3.jpg\";\r\nimport theme4Img from \"../../images/theme4.jpg\";\r\nimport cx from \"classnames\";\r\nimport { iconClassName } from \"@blink-mind/renderer-react\";\r\nimport { Popover } from \"@blueprintjs/core\";\r\nimport React from \"react\";\r\n\r\nexport function ToolbarItemTheme(props) {\r\n  const onClickSetTheme = themeKey => e => {\r\n    const { diagram } = props;\r\n    const diagramProps = diagram.getDiagramProps();\r\n    const { controller } = diagramProps;\r\n    controller.run(\"setTheme\", { ...diagramProps, themeKey });\r\n  };\r\n  const themes = [\r\n    [\"default\", defaultThemeImg],\r\n    [\"theme1\", theme1Img],\r\n    [\"theme2\", theme2Img],\r\n    [\"theme3\", theme3Img],\r\n    [\"theme4\", theme4Img]\r\n  ];\r\n\r\n  return (\r\n    <div className={cx(\"bm-toolbar-item\", iconClassName(\"theme\"))}>\r\n      <Popover enforceFocus={false}>\r\n        <div className=\"bm-toolbar-popover-target\" />\r\n        <div className=\"bm-popover-theme\">\r\n          {themes.map(theme => (\r\n            <div\r\n              key={theme[0]}\r\n              className=\"bm-theme-item\"\r\n              onClick={onClickSetTheme(theme[0])}\r\n            >\r\n              <img className=\"bm-theme-img\" src={theme[1]} alt={theme[0]} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import cx from \"classnames\";\r\nimport { iconClassName } from \"@blink-mind/renderer-react\";\r\nimport { Menu, MenuDivider, MenuItem, Popover } from \"@blueprintjs/core\";\r\nimport React from \"react\";\r\nimport { downloadFile } from \"../../utils\";\r\n\r\nexport function ToolbarItemExport(props) {\r\n  const onClickExportJson = e => {\r\n    const { diagram } = props;\r\n    const diagramProps = diagram.getDiagramProps();\r\n    const { controller, model } = diagramProps;\r\n\r\n    const json = controller.run(\"serializeModel\", diagramProps);\r\n    const jsonStr = JSON.stringify(json);\r\n    const url = `data:text/plain,${encodeURIComponent(jsonStr)}`;\r\n    const title = controller.run(\"getTopicTitle\", {\r\n      ...diagramProps,\r\n      topicKey: model.rootTopicKey\r\n    });\r\n    downloadFile(url, `${title}.blinkmind`);\r\n  };\r\n\r\n  return (\r\n    <div className={cx(\"bm-toolbar-item\", iconClassName(\"export\"))}>\r\n      <Popover enforceFocus={false}>\r\n        <div className=\"bm-toolbar-popover-target\" />\r\n        <Menu>\r\n          <MenuItem text=\"JSON(.json)\" onClick={onClickExportJson} />\r\n          <MenuDivider />\r\n        </Menu>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import { Model, createKey } from \"@blink-mind/core\";\r\n\r\nexport const downloadFile = (url, filename) => {\r\n  const link = document.createElement(\"a\");\r\n  link.href = url;\r\n  link.download = filename;\r\n  link.click();\r\n};\r\n\r\nexport function generateSimpleModel() {\r\n  const rootKey = createKey();\r\n\r\n  return Model.create({\r\n    rootTopicKey: rootKey,\r\n    topics: [\r\n      {\r\n        key: rootKey,\r\n        blocks: [{ type: \"CONTENT\", data: \"MainTopic\" }]\r\n      }\r\n    ]\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { OpType } from \"@blink-mind/core\";\r\nimport { FOCUS_MODE_SEARCH } from \"@blink-mind/plugins\";\r\nimport { iconClassName, IconName } from \"@blink-mind/renderer-react\";\r\n\r\nexport function ToolbarItemSearch(props) {\r\n  const onClickSearch = e => {\r\n    const { diagram } = props;\r\n    const diagramProps = diagram.getDiagramProps();\r\n    const { controller } = diagramProps;\r\n\r\n    controller.run(\"operation\", {\r\n      ...diagramProps,\r\n      opType: OpType.SET_FOCUS_MODE,\r\n      focusMode: FOCUS_MODE_SEARCH\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      className={`bm-toolbar-item ${iconClassName(IconName.SEARCH)}`}\r\n      onClick={onClickSearch}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport \"./Toolbar.css\";\r\nimport { iconClassName } from \"@blink-mind/renderer-react\";\r\nimport { ToolbarItemOpen } from \"./toolbar-item-open\";\r\nimport { ToolbarItemLayout } from \"./toolbar-item-layout\";\r\nimport { ToolbarItemTheme } from \"./toolbar-item-theme\";\r\nimport { ToolbarItemExport } from \"./toolbar-item-export\";\r\nimport { ToolbarItemSearch } from \"./toolbar-item-search\";\r\n\r\n// import debug from \"debug\";\r\n// const log = debug(\"app\");\r\n\r\nexport class Toolbar extends React.PureComponent {\r\n  render() {\r\n    const props = this.props;\r\n\r\n    const { onClickUndo, onClickRedo, canUndo, canRedo } = props;\r\n\r\n    return (\r\n      <div className=\"bm-toolbar\">\r\n        <ToolbarItemOpen {...props} />\r\n        <ToolbarItemExport {...props} />\r\n        <ToolbarItemTheme {...props} />\r\n        <ToolbarItemLayout {...props} />\r\n        <ToolbarItemSearch {...props} />\r\n\r\n        <div\r\n          className={cx(\"bm-toolbar-item\", iconClassName(\"undo\"), {\r\n            \"bm-toolbar-item-disabled\": !canUndo\r\n          })}\r\n          onClick={onClickUndo}\r\n        />\r\n\r\n        <div\r\n          className={cx(\"bm-toolbar-item\", iconClassName(\"redo\"), {\r\n            \"bm-toolbar-item-disabled\": !canRedo\r\n          })}\r\n          onClick={onClickRedo}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Diagram } from \"@blink-mind/renderer-react\";\r\nimport RichTextEditorPlugin from \"@blink-mind/plugin-rich-text-editor\";\r\nimport { JsonSerializerPlugin } from \"@blink-mind/plugin-json-serializer\";\r\nimport { ThemeSelectorPlugin } from \"@blink-mind/plugin-theme-selector\";\r\nimport TopologyDiagramPlugin from \"@blink-mind/plugin-topology-diagram\";\r\nimport { TopicReferencePlugin, SearchPlugin } from \"@blink-mind/plugins\";\r\nimport { Toolbar } from \"./toolbar/toolbar\";\r\nimport { generateSimpleModel } from \"../utils\";\r\nimport \"@blink-mind/renderer-react/lib/main.css\";\r\nimport debug from \"debug\";\r\n\r\nconst log = debug(\"app\");\r\n\r\nconst plugins = [\r\n  RichTextEditorPlugin(),\r\n  ThemeSelectorPlugin(),\r\n  TopicReferencePlugin(),\r\n  SearchPlugin(),\r\n  TopologyDiagramPlugin(),\r\n  JsonSerializerPlugin()\r\n];\r\n\r\nexport class Mindmap extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initModel();\r\n  }\r\n\r\n  diagram;\r\n  diagramRef = ref => {\r\n    this.diagram = ref;\r\n    this.setState({});\r\n  };\r\n\r\n  initModel() {\r\n    const model = generateSimpleModel();\r\n    this.state = { model };\r\n  }\r\n\r\n  onClickUndo = e => {\r\n    const props = this.diagram.getDiagramProps();\r\n    const { controller } = props;\r\n    controller.run(\"undo\", props);\r\n  };\r\n\r\n  onClickRedo = e => {\r\n    const props = this.diagram.getDiagramProps();\r\n    const { controller } = props;\r\n    controller.run(\"redo\", props);\r\n  };\r\n\r\n  renderDiagram() {\r\n    return (\r\n      <Diagram\r\n        ref={this.diagramRef}\r\n        model={this.state.model}\r\n        onChange={this.onChange}\r\n        plugins={plugins}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderToolbar() {\r\n    const props = this.diagram.getDiagramProps();\r\n    const { controller } = props;\r\n    const canUndo = controller.run(\"canUndo\", props);\r\n    const canRedo = controller.run(\"canRedo\", props);\r\n    const toolbarProps = {\r\n      diagram: this.diagram,\r\n      onClickUndo: this.onClickUndo,\r\n      onClickRedo: this.onClickRedo,\r\n      canUndo,\r\n      canRedo\r\n    };\r\n    return <Toolbar {...toolbarProps} />;\r\n  }\r\n\r\n  onChange = (model, callback) => {\r\n    this.setState(\r\n      {\r\n        model\r\n      },\r\n      callback\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mindmap\">\r\n        {this.diagram && this.renderToolbar()}\r\n        {this.renderDiagram()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mindmap;\r\n","import React, { Component } from 'react';\r\nimport { Person} from 'blockstack';\r\nimport Mindmap from \"./component/mindmap\";\r\n\r\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\r\nexport const ME_FILENAME = 'mychart.json'\r\n\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n  \tsuper(props);\r\n\r\n  \tthis.state = {\r\n  \t  person: {\r\n  \t  \tname() {\r\n          return 'Anonymous';\r\n        }\r\n  \t  },\r\n  \t};\r\n  }\r\n\r\n  render() {\r\n    const { handleSignOut, userSession } = this.props;\r\n    const { person } = this.state;\r\n    return (\r\n      !userSession.isSignInPending() ?\r\n      <div className=\"panel-welcome\" id=\"section-2\">\r\n        <div className=\"avatar-section\">\r\n         <img src={ person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage } className=\"img-rounded avatar\" id=\"avatar-image\"   alt=\"\"/>\r\n         <h1> <span id=\"heading-name\">{ person.name() ? person.name() : 'Nameless Person' }</span>的思维脑图</h1>\r\n        </div>\r\n       \r\n     \r\n        <Mindmap userSession={userSession} />\r\n        <p className=\"lead\">\r\n      \r\n          <button\r\n            className=\"btn btn-primary btn-lg\"\r\n            id=\"signout-button\"\r\n            onClick={ handleSignOut.bind(this) }\r\n          >\r\n            Logout\r\n          </button>\r\n        </p>\r\n      </div> : null\r\n    );\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { userSession } = this.props;\r\n    this.setState({\r\n      person: new Person(userSession.loadUserData().profile),\r\n    });\r\n  }\r\n\r\n \r\n}","import React, { Component } from 'react';\r\n\r\n//import 'bootstrap/dist/css/bootstrap.css';\r\n//import 'bootstrap/dist/css/bootstrap-theme.css';\r\n\r\nimport {UserSession, AppConfig } from 'blockstack';\r\nimport Signin from './Signin.js';\r\nimport Profile from './Profile.js';\r\n\r\nconst appConfig = new AppConfig()  //app基本信息\r\nexport const userSession = new UserSession({ appConfig: appConfig })  //建立用户的session信息\r\n\r\nclass App extends Component{\r\n\r\n\r\nhandleSignIn(e) {                //登录改变userSession属性\r\n    e.preventDefault();\r\n    userSession.redirectToSignIn();\r\n  }\r\n  handleSignOut(e) {          //退出\r\n    e.preventDefault();\r\n    userSession.signUserOut(window.location.origin);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"site-wrapper\">\r\n        <div className=\"site-wrapper-inner\">\r\n          { !userSession.isUserSignedIn() ?\r\n            <Signin userSession={userSession} handleSignIn={ this.handleSignIn } />\r\n            : <Profile userSession={userSession} handleSignOut={ this.handleSignOut } />\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n  componentDidMount() {\r\n    if (userSession.isSignInPending()) {\r\n      userSession.handlePendingSignIn().then((userData) => {\r\n        window.history.replaceState({}, document.title, \"/\")\r\n        this.setState({ userData: userData})\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/default.4f8c4983.jpg\";","module.exports = __webpack_public_path__ + \"static/media/theme1.2f59f00b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/theme2.b18193fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/theme3.61c97910.jpg\";","module.exports = __webpack_public_path__ + \"static/media/theme4.1e21408c.jpg\";"],"sourceRoot":""}